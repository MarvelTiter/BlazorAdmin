@using BlazorWebAdmin.Template.Tables
@using Project.Models.Entities
@using Project.Models.Request
@page "/user/index"
@inject IJSRuntime JsRuntime

<TableTemplate TableOptions=tableOptions TData=User TQuery=@(GeneralReq<User>)>
	
</TableTemplate>

@code {
	TableOptions<User, GeneralReq<User>> tableOptions;

	protected override void OnInitialized()
	{
		base.OnInitialized();
		tableOptions = new TableOptions<User, GeneralReq<User>>();
		tableOptions.DataLoader = Load;
		tableOptions.AddHandle = async () =>
		{
			var confirm = new ConfirmService();
			await confirm.Show("Test", "Hello");
			return true;
		};
	}

	async Task<QueryResult<PagingResult<User>>> Load(GeneralReq<User> req)
	{
		List<User> users = new List<User>();
		var length = new Random().Next(5, 15);
		for (var i = 0; i < length; i++)
		{
			var u = new User();
			u.UserName = $"Hello -> {i}";
			users.Add(u);
			await Task.Delay(100);
		}
		Console.WriteLine(req.Expression);
		return QueryResult<User>.PagingResult(users, users.Count);
	}
	Task OpenNewTab()
	{
		JsRuntime.InvokeVoidAsync("open", "/counter/index");
		return Task.CompletedTask;
	}
}
