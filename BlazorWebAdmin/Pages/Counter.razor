@page "/counter/index"
@using BlazorWebAdmin.Template.Tables
@using System.Data
@inject CounterStore store
@inject MessageService MessageSrv;
<h3>Counter</h3>
<h4>私有变量: @count</h4>
<h4>Store变量: @store.Count</h4>

<Button Type="@ButtonType.Primary" OnClick="Add">计数</Button>

<CustomSelect Style="width:168px;" Options=store.Items @bind-Value="selected"></CustomSelect>


<TableTemplate TableOptions=tableOptions></TableTemplate>

@code {
	private int count;
	private string selected;
	TableOptions<DataRow> tableOptions;

	protected override void OnInitialized()
	{
		base.OnInitialized();
		tableOptions = new TableOptions<DataRow>();
		tableOptions.AddColumn("列1", "A")
					.AddColumn("列2", "B")
					.AddColumn("列3", "C")
					.AddColumn("列4", "D");
		tableOptions.DataLoader = Load;
	}

	private void Add()
	{
		count++;
		store.Count++;
		MessageSrv.Success(selected);
	}

	async Task<IEnumerable<DataRow>> Load(int pageIndex, int pageSize)
	{
		DataTable dt = new DataTable();
		dt.Columns.Add("A");
		dt.Columns.Add("B");
		dt.Columns.Add("C");
		dt.Columns.Add("D");
		var length = new Random().Next(5, 15);
		for (var i = 0; i < length; i++)
		{
			var row = dt.NewRow();
			row["A"] = $"A => {i}";
			row["B"] = $"B => {i}";
			row["C"] = $"C => {i}";
			row["D"] = $"D => {i}";
			dt.Rows.Add(row);
			await Task.Delay(200);
		}
		Console.WriteLine($"pageIndex:{pageIndex} ; pageSize:{pageSize}");
		return dt.AsEnumerable();
	}
}
