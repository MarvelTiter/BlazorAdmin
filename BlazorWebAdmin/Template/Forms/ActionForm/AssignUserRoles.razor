@using Project.Models.Permissions
@using Project.Services.interfaces
@inherits EntityFormTemplate<User>
@inject IPermissionService PermissionSrv
<h3>用户: @Value.UserName</h3>
<div style="margin:10px 0;">
	@for (var i = 0; i < roleDefs.Count; i++)
	{
		var item = roleDefs[i];
		<div class="role-item @(item.Check?"check":"")">
			<Checkbox @bind-Value=item.Check></Checkbox>
			<span>@($"{item.Role.RoleId} - {item.Role.RoleName}")</span>
		</div>
	}
</div>
<Button Type="@ButtonType.Primary" OnClick="SaveUserRole">保存用户角色</Button>
@code {
	class RoleDef
	{
		public RoleDef(Role Role, bool Check)
		{
			this.Role = Role;
			this.Check = Check;
		}

		public Role Role { get; set; }
		public bool Check { get; set; }
	}

	List<RoleDef> roleDefs = new List<RoleDef>();
	protected override async Task OnInitializedAsync()
	{
		await base.OnInitializedAsync();
		var roles = await PermissionSrv.GetRoleListAsync();
		roleDefs = roles.Select(r => new RoleDef(r, false)).ToList();
	}
	Task SaveUserRole()
	{
		//PermissionSrv.SaveUserRole(Value.UsrId,)
		return Task.CompletedTask;
	}
}

<style>
	.role-item {
		padding: 5px 10px;
		box-sizing: border-box;
		border: solid 1px #d9d9d9;
		margin:10px 0;
	}

		.role-item.check {
			border-color: #1890ff;
		}
</style>
