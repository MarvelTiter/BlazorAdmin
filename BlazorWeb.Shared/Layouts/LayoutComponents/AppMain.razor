@using BlazorWeb.Shared.Components
@inject RouterStore store
@implements IDisposable
<ScrollBar>
    @foreach (var item in store.TopLink)
    {
        if (item.Content == null) continue;
        <div id=@item.RouteLink class=@item.ItemClass>
            @RenderCacheItemContent(item.Content.Body)
        </div>
    }
</ScrollBar>

@code {
    [Parameter]
    public RenderFragment? ChildContent { get; set; }
    [CascadingParameter]
    public RootLayout? Parent { get; set; }
    protected override void OnInitialized()
    {
        base.OnInitialized();
        Parent!.OnNavigated += OnNavigated;
    }

    void OnNavigated(LocationChangedEventArgs e)
    {
        var uri = e.Location;
        var item = store.Current;
        if (item != null)
        {
            if (item.Content == null)
            {
                item.Content = new CacheItem()
                    {
                        StartTime = DateTime.Now,
                        ActiveTime = DateTime.Now,
                        Body = ChildContent,
                    };
            }
        }
        StateHasChanged();
    }

    private RenderFragment? RenderCacheItemContent(RenderFragment? content) => builder =>
    {
        var index = 0;
        builder.OpenComponent<ErrorCatcher>(index++);
        builder.AddAttribute(index++, nameof(ErrorCatcher.ChildContent), content);
        builder.CloseComponent();
    };

    private bool disposedValue;
    protected virtual void Dispose(bool disposing)
    {
        if (!disposedValue)
        {
            if (disposing)
            {
                // 释放托管状态(托管对象)
                Parent!.OnNavigated -= OnNavigated;
            }

            // 释放未托管的资源(未托管的对象)并重写终结器
            // 将大型字段设置为 null
            disposedValue = true;
        }
    }
    public void Dispose()
    {
        Dispose(disposing: true);
        GC.SuppressFinalize(this);
    }
}

<style>
    .main_content {
        display: none;
        /*overflow: auto;
            flex: 1;
            padding: 10px;*/
    }

        .main_content.active {
            display: block;
        }
</style>
