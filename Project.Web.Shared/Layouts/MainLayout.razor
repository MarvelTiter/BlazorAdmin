@using Project.Web.Shared.Layouts.LayoutComponents
@using Project.Web.Shared.Layouts.Layouts
@using Microsoft.AspNetCore.Components.Server.ProtectedBrowserStorage;
@using System.Globalization;
@using Project.AppCore.Routers;
@inherits LayoutComponentBase
@layout AuthorizedLayout
@inject RouterStore Store
@inject AppStore App
@implements IDisposable

<PageTitle>
    @($"管理系统 - {Store.Current?.RouteTitle ?? "主页"}")
</PageTitle>

<div class="page">
    <CascadingValue Value="this" IsFixed>
        @if (App.Mode == LayoutMode.Classic)
        {
            <ClassicLayout @ref=LayoutBase></ClassicLayout>
        }
        else if (App.Mode == LayoutMode.Card)
        {
            <CardLayout @ref=LayoutBase></CardLayout>
        }
        else if (App.Mode == LayoutMode.Line)
        {
            <LineLayout @ref=LayoutBase></LineLayout>
        }
        else
        {
            <div style="height:100vh; width:100vw;display: flex; align-items: center;justify-content: center;">
                <Spin Spinning Tip="初始化中……">
                 </Spin>
             </div>
        }
        <WebSetting @ref=WebSetting></WebSetting>
    </CascadingValue>
</div>
@code {
    public LayoutBase? LayoutBase{ get; set; }
    public WebSetting? WebSetting { get; set; }

    protected override void OnAfterRender(bool firstRender)
    {
        base.OnAfterRender(firstRender);
        if (firstRender)
        {
            WebSetting!.SettingChanged += StateHasChanged;
        }
    }

    public void Dispose()
    {
        WebSetting!.SettingChanged -= StateHasChanged;
    }

}