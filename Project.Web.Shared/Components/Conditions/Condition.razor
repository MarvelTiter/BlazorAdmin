@namespace Project.Web.Shared.Components
@using Project.Web.Shared.Extensions
@inherits ConditionBase

@code {

    RenderFragment CreateBody()
    {
        return builder =>
        {
            builder.MakeDiv(() =>
            {
                builder.OpenElement(0, "span");
                builder.AddAttribute(1, "class", "conditions");
                builder.AddAttribute(2, "style", Style);
                builder.OpenElement(3, "span");
                builder.AddAttribute(4, "class", "label");
                builder.AddAttribute(5, "style", $"{Parent.LabelWidth}px");
                builder.AddContent(6, Label);
                builder.CloseElement();
                if (Field != null && ChildContent == null)
                {
                    if (Field.DataType == typeof(DateTime))
                    {
                        builder.AddContent(7, UI.BuildDatePicker<DateTime>(this).Bind(() => dateValue).Render());
                    }
                    else if (Field?.EnumValues != null || (Field?.IsEnum ?? false))
                    {
                        // builder.OpenComponent<DictionarySelect>(7);
                        // builder.AddComponentParameter(8, "Options", Field.EnumValues);
                        // builder.AddComponentParameter(9, "Value", stringValue);
                        // builder.AddComponentParameter(10, "ValueChanged", EventCallback.Factory.Create<string>(this, s => stringValue = s));

                        UI.BuildSelect<KeyValuePair<string, string>, string>(this, Field.EnumValues!.ToList()).LabelExpression(kv => kv.Key).ValueExpression(kv => kv.Value).Bind(() => stringValue).Render().Invoke(builder);
                    }
                    else
                    {
                        builder.AddContent(7, UI.BuildInput(this).Bind(() => stringValue).Render());
                    }
                }
                else
                {
                    builder.AddContent(7, ChildContent);
                }

                builder.CloseElement();

            });
        };
    }
}
